name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      aws-account-id:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      service-type:
        required: true
        type: string
    outputs:
      image-uri:
        description: "The URI of the built and pushed Docker image"
        value: ${{ jobs.build-and-push.outputs.image-uri }}

env:
  AWS_ACCOUNT_ID: ${{ inputs.aws-account-id }}
  AWS_REGION: ${{ inputs.aws-region }}
  ECR_REPOSITORY: soa-ecr-codeland-${{ inputs.service-type }}
  ENVIRONMENT: develop

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-uri: ${{ steps.output-uri.outputs.image-uri }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/SOAGitHubActionsRole
          role-session-name: SOAGitHubActionsRole

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate image tag
        id: generate-tag
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "IMAGE_TAG=dev-${SHORT_SHA}" >> $GITHUB_ENV
          echo "image_tag=dev-${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to Amazon ECR
        id: push-image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile-dev
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Output Image URI
        id: output-uri
        run: |
          echo "image-uri=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Build summary
        run: |
          echo "✅ Docker image build completed successfully!"
          echo "📦 Repository: ${{ env.ECR_REPOSITORY }}"
          echo "🏷️ Tag: ${{ env.IMAGE_TAG }}"
          echo "📍 URI: ${{ steps.output-uri.outputs.image-uri }}"
